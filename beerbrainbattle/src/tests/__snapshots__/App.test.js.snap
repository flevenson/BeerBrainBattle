// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App App Component should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    prize="1 Whole Beer"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header>
          <h1
            className="app-heading"
          >
            <span
              className="heading-beer"
            >
              Beer
            </span>
            <span
              className="heading-brain"
            >
              Brain
            </span>
            <span
              className="heading-battle"
            >
              Battle
            </span>
          </h1>
          <span
            className="hidden"
          >
            <h1
              className="player-count"
            />
            <h1
              className="players"
            >
              players
            </h1>
          </span>
        </header>,
        <main
          className="app-main"
        >
          <Switch>
            <Route
              exact={true}
              path="/"
              render={[Function]}
            />
            <Route
              exact={true}
              path="/question"
              render={[Function]}
            />
            <Route
              exact={true}
              path="/answer"
              render={[Function]}
            />
            <Route
              exact={true}
              path="/gameOver"
              render={[Function]}
            />
            <Route
              component={[Function]}
            />
          </Switch>
        </main>,
        <footer>
          <h1
            className="prize-text"
          >
            Current Prize: 
            1 Whole Beer
          </h1>
        </footer>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="app-heading"
            >
              <span
                className="heading-beer"
              >
                Beer
              </span>
              <span
                className="heading-brain"
              >
                Brain
              </span>
              <span
                className="heading-battle"
              >
                Battle
              </span>
            </h1>,
            <span
              className="hidden"
            >
              <h1
                className="player-count"
              />
              <h1
                className="players"
              >
                players
              </h1>
            </span>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="heading-beer"
                >
                  Beer
                </span>,
                <span
                  className="heading-brain"
                >
                  Brain
                </span>,
                <span
                  className="heading-battle"
                >
                  Battle
                </span>,
              ],
              "className": "app-heading",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Beer",
                  "className": "heading-beer",
                },
                "ref": null,
                "rendered": "Beer",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Brain",
                  "className": "heading-brain",
                },
                "ref": null,
                "rendered": "Brain",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Battle",
                  "className": "heading-battle",
                },
                "ref": null,
                "rendered": "Battle",
                "type": "span",
              },
            ],
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1
                  className="player-count"
                />,
                <h1
                  className="players"
                >
                  players
                </h1>,
              ],
              "className": "hidden",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "player-count",
                },
                "ref": null,
                "rendered": null,
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "players",
                  "className": "players",
                },
                "ref": null,
                "rendered": "players",
                "type": "h1",
              },
            ],
            "type": "span",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Switch>
            <Route
              exact={true}
              path="/"
              render={[Function]}
            />
            <Route
              exact={true}
              path="/question"
              render={[Function]}
            />
            <Route
              exact={true}
              path="/answer"
              render={[Function]}
            />
            <Route
              exact={true}
              path="/gameOver"
              render={[Function]}
            />
            <Route
              component={[Function]}
            />
          </Switch>,
          "className": "app-main",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Route
                exact={true}
                path="/"
                render={[Function]}
              />,
              <Route
                exact={true}
                path="/question"
                render={[Function]}
              />,
              <Route
                exact={true}
                path="/answer"
                render={[Function]}
              />,
              <Route
                exact={true}
                path="/gameOver"
                render={[Function]}
              />,
              <Route
                component={[Function]}
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "exact": true,
                "path": "/",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "exact": true,
                "path": "/question",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "exact": true,
                "path": "/answer",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "exact": true,
                "path": "/gameOver",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "main",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1
            className="prize-text"
          >
            Current Prize: 
            1 Whole Beer
          </h1>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Current Prize: ",
              "1 Whole Beer",
            ],
            "className": "prize-text",
          },
          "ref": null,
          "rendered": Array [
            "Current Prize: ",
            "1 Whole Beer",
          ],
          "type": "h1",
        },
        "type": "footer",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header>
            <h1
              className="app-heading"
            >
              <span
                className="heading-beer"
              >
                Beer
              </span>
              <span
                className="heading-brain"
              >
                Brain
              </span>
              <span
                className="heading-battle"
              >
                Battle
              </span>
            </h1>
            <span
              className="hidden"
            >
              <h1
                className="player-count"
              />
              <h1
                className="players"
              >
                players
              </h1>
            </span>
          </header>,
          <main
            className="app-main"
          >
            <Switch>
              <Route
                exact={true}
                path="/"
                render={[Function]}
              />
              <Route
                exact={true}
                path="/question"
                render={[Function]}
              />
              <Route
                exact={true}
                path="/answer"
                render={[Function]}
              />
              <Route
                exact={true}
                path="/gameOver"
                render={[Function]}
              />
              <Route
                component={[Function]}
              />
            </Switch>
          </main>,
          <footer>
            <h1
              className="prize-text"
            >
              Current Prize: 
              1 Whole Beer
            </h1>
          </footer>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="app-heading"
              >
                <span
                  className="heading-beer"
                >
                  Beer
                </span>
                <span
                  className="heading-brain"
                >
                  Brain
                </span>
                <span
                  className="heading-battle"
                >
                  Battle
                </span>
              </h1>,
              <span
                className="hidden"
              >
                <h1
                  className="player-count"
                />
                <h1
                  className="players"
                >
                  players
                </h1>
              </span>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="heading-beer"
                  >
                    Beer
                  </span>,
                  <span
                    className="heading-brain"
                  >
                    Brain
                  </span>,
                  <span
                    className="heading-battle"
                  >
                    Battle
                  </span>,
                ],
                "className": "app-heading",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Beer",
                    "className": "heading-beer",
                  },
                  "ref": null,
                  "rendered": "Beer",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Brain",
                    "className": "heading-brain",
                  },
                  "ref": null,
                  "rendered": "Brain",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Battle",
                    "className": "heading-battle",
                  },
                  "ref": null,
                  "rendered": "Battle",
                  "type": "span",
                },
              ],
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1
                    className="player-count"
                  />,
                  <h1
                    className="players"
                  >
                    players
                  </h1>,
                ],
                "className": "hidden",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "player-count",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "h1",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "players",
                    "className": "players",
                  },
                  "ref": null,
                  "rendered": "players",
                  "type": "h1",
                },
              ],
              "type": "span",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Switch>
              <Route
                exact={true}
                path="/"
                render={[Function]}
              />
              <Route
                exact={true}
                path="/question"
                render={[Function]}
              />
              <Route
                exact={true}
                path="/answer"
                render={[Function]}
              />
              <Route
                exact={true}
                path="/gameOver"
                render={[Function]}
              />
              <Route
                component={[Function]}
              />
            </Switch>,
            "className": "app-main",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Route
                  exact={true}
                  path="/"
                  render={[Function]}
                />,
                <Route
                  exact={true}
                  path="/question"
                  render={[Function]}
                />,
                <Route
                  exact={true}
                  path="/answer"
                  render={[Function]}
                />,
                <Route
                  exact={true}
                  path="/gameOver"
                  render={[Function]}
                />,
                <Route
                  component={[Function]}
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "exact": true,
                  "path": "/",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "exact": true,
                  "path": "/question",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "exact": true,
                  "path": "/answer",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "exact": true,
                  "path": "/gameOver",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "main",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1
              className="prize-text"
            >
              Current Prize: 
              1 Whole Beer
            </h1>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Current Prize: ",
                "1 Whole Beer",
              ],
              "className": "prize-text",
            },
            "ref": null,
            "rendered": Array [
              "Current Prize: ",
              "1 Whole Beer",
            ],
            "type": "h1",
          },
          "type": "footer",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
